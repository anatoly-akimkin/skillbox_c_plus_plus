// Задание 1. Банкетный стол. Что нужно сделать. По поводу успешного прохождения двумерных массивов собирается банкет, организуется стол на 12 персон. Есть два VIP-места, они рядом во главе стола. Стол протяжён в длину, места расположены в два ряда. Каждый пришедший должен быть «упакован» соответствующим образом. Во-первых, столовые приборы: по три на каждого человека (вилка, ложка, нож) и одна маленькая дополнительная ложечка для VIP-персон (для десерта). Во-вторых, тарелки: каждому по две (для первого и второго блюда) и ещё одна тарелка для VIP-персон (для десерта). В-третьих, стулья: минимум один для каждого гостя. Заведите соответствующие двумерные массивы для количества приборов, посуды и стульев и проинициализируйте их. 
// Но это ещё не всё. На банкете после инициализации происходят некоторые события. Пришедшая на пятое место первого ряда дама привела с собой ребёнка, и поэтому на данное место был приставлен ещё один стул. С третьего места во втором ряду в неизвестном направлении была украдена ложка. Одна из VIP-персон (любая) поделилась своей ложкой с тем, кто остался без ложки, и стала есть суп десертной. За ненадобностью официант забрал у VIP-гостя одну десертную тарелку, ведь есть десерт ложкой, которая уже побывала уже в супе, неприлично. Больше без происшествий, однако эти события на банкете надо отразить в инициализированных ранее массивах.
// Советы и рекомендации. Все действия в задаче оформляются в виде выражений внутри исходного кода. Текстовый интерфейс для задачи делать необязательно. Необходимо объявить несколько двумерных массивов (по типам приборов). Массивы очень удобно инициализировать сразу при объявлении так:
// int packages[2][3] = {{2, 1, 7},{3, 5, 31}}
// Проще будет сначала записать в массивы значения из задания, а потом отнимать или прибавлять нужные элементы, следуя за сценарием событий:
// packages[0][0] +=1; // packages[0][0] хранит в себе цифру 2, и мы прибавляем к этому значению 1 — += 1.
// Что оценивается. Все действия внутри массива соответствуют условию.

#include <iostream>

void print_matrix (int a[][6], int b[][6], int c[][6])
{
    int count = 0;
    for (int y = 0; y < 5; y++)
    {
        int i = y / 2;
        for (int x = 0, j = 0; x < 79; x++)
        {
            if (y%2 == 0)
            {
                std::cout << "-";
            }
            else if (x%13 == 0)
            {
                std::cout << "|";
            }
            else if ((x-1)%13 == 0)
            {
                count++;
                if (count < 10)
                {
                    std::cout << "0" << count;
                }
                else
                {
                    std::cout << count;
                }

                std::cout << "| " << a[i][j] << ", " 
                                  << b[i][j] << ", " 
                                  << c[i][j] << " ";
                j++;
            }
        }
        std::cout << std::endl;
    }
}

int main() 
{
    int cutlery[2][6] {{4, 3, 3, 3, 3, 3}, 
                       {4, 3, 3, 3, 3, 3}};
    int plates[2][6] {{3, 2, 2, 2, 2, 2},
                      {3, 2, 2, 2, 2, 2}};
    int chairs[2][6] {{1, 1, 1, 1, 1, 1},
                      {1, 1, 1, 1, 1, 1}};

    std::cout << "The banquet begins!\n\n";

    print_matrix(cutlery, plates, chairs);

    std::cout << "\nThe lady brought her child with her!\n5 place: +1 chair\n\n";
    chairs[0][4]++;

    std::cout << "A spoon was stolen in an unknown direction!\n9 place: -1 spoon\n\n";
    cutlery[1][2]--;
    print_matrix(cutlery, plates, chairs);

    std::cout << "\nOne of the VIPs shared his spoon and began to eat soup with a dessert spoon.\n7 place: -1 spoon\n9 place: +1 spoon\n\n";
    cutlery[1][0]--;
    cutlery[1][2]++;
    print_matrix(cutlery, plates, chairs);

    std::cout << "\nOh no!\nIt is indecent to eat dessert with a spoon that has already been in the soup!\n\nThe waiter took the VIP guest's dessert plate away.\n7 place: -1 plate\n\n";
    plates[1][0]--;
    print_matrix(cutlery, plates, chairs);

    std::cout << "\nThere were no more incidents.\n";
}